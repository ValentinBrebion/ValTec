import{_ as s,o as e,c as a,V as n}from"./chunks/framework.11ad626b.js";const l="/composerSetup.png",D=JSON.parse('{"title":"Intro Laravel","description":"","frontmatter":{},"headers":[],"relativePath":"language/PHP/Laravel/Laravel.md","filePath":"language/PHP/Laravel/Laravel.md","lastUpdated":1706575223000}'),o={name:"language/PHP/Laravel/Laravel.md"},t=n('<h1 id="intro-laravel" tabindex="-1">Intro Laravel <a class="header-anchor" href="#intro-laravel" aria-label="Permalink to &quot;Intro Laravel&quot;">​</a></h1><p><em>Laravel est un framework open-source très populaire et puissant écrit en PHP. Il a été créé par Taylor Otwell et est apparu pour la première fois en 2011. Ce framework est conçu pour <code>simplifier le développement d&#39;applications web en fournissant une structure solide et des fonctionnalités avancées.</code></em></p><h2 id="ses-caracteristiques-💡" tabindex="-1"><u>Ses caractéristiques </u>💡 <a class="header-anchor" href="#ses-caracteristiques-💡" aria-label="Permalink to &quot;&lt;u&gt;Ses caractéristiques &lt;/u&gt;💡&quot;">​</a></h2><table><thead><tr><th>Architecture MVC 🏗️</th><th style="text-align:center;">Routage 🪜</th><th style="text-align:right;">ORM élégant 🌟</th></tr></thead><tbody><tr><td>Laravel suit le motif de conception Modèle-Vue-Contrôleur (MVC), ce qui facilite la séparation des préoccupations et la gestion des différentes couches de l&#39;application.</td><td style="text-align:center;">Il offre un système de routage simple et efficace, permettant de définir facilement les points d&#39;entrée de l&#39;application et de lier des URL aux contrôleurs correspondants.</td><td style="text-align:right;">Laravel fournit un ORM (Object-Relational Mapping) appelé Eloquent. Cela permet de manipuler la base de données à l&#39;aide de requêtes PHP orientées objet plutôt qu&#39;en utilisant du SQL brut, simplifiant ainsi les opérations de base de données.</td></tr></tbody></table><table><thead><tr><th>Gestionnaire de dépendances 📦</th><th style="text-align:center;">Système de templates 📝</th><th style="text-align:right;">Sécurité 🛡️</th></tr></thead><tbody><tr><td>Laravel est livré avec un puissant gestionnaire de dépendances appelé &quot;Composer&quot;, qui facilite l&#39;installation de bibliothèques tierces et de packages dans votre projet.</td><td style="text-align:center;">Le framework utilise le moteur de templates Blade, qui offre une syntaxe concise et expressive pour gérer les vues de manière propre et structurée.</td><td style="text-align:right;">Laravel met l&#39;accent sur la sécurité en intégrant des mécanismes de protection contre les attaques courantes telles que les failles CSRF (Cross-Site Request Forgery) et XSS (Cross-Site Scripting).</td></tr></tbody></table><table><thead><tr><th>Intégration de services tiers 📧</th><th style="text-align:center;">Traitement des sessions et des cookies 🍪</th><th style="text-align:right;">Tests automatisés 🤔</th></tr></thead><tbody><tr><td>Laravel propose une intégration facile avec des services tiers tels que l&#39;envoi d&#39;e-mails, le stockage en cloud, la gestion des tâches en arrière-plan, etc.</td><td style="text-align:center;">Le framework facilite la gestion des sessions et des cookies, ce qui permet de conserver l&#39;état de l&#39;application pour chaque utilisateur.</td><td style="text-align:right;">Laravel encourage les bonnes pratiques de développement en fournissant des outils pour réaliser des tests unitaires et des tests fonctionnels automatisés.</td></tr></tbody></table><h2 id="comment-l-installer-version-windows-❓" tabindex="-1"><u>Comment l&#39;installer (Version Windows)</u> ❓ <a class="header-anchor" href="#comment-l-installer-version-windows-❓" aria-label="Permalink to &quot;&lt;u&gt;Comment l&#39;installer (Version Windows)&lt;/u&gt; ❓&quot;">​</a></h2><p>Comme mentionné ci-dessus, Laravel est livré avec un puissant gestionnaire de dépendances appelé <a href="https://getcomposer.org/download/"><code>&quot;Composer&quot; 🔗</code></a>, qui facilite l&#39;installation de bibliothèques tierces et de packages dans votre projet.</p><p><em>Une fois le .exe lancé, lancez votre CMD et tapez la commande <strong>&quot;composer&quot;</strong>. Si vous avez les inscriptions comme indiquez sur la capture ci-dessous, c&#39;est que composer a bien été installé sur votre ordinateur</em> 😁.</p><p><img src="'+l+`" alt="Texte alternatif de l&#39;image"></p><h2 id="comment-l-installer-version-macos-❓" tabindex="-1"><u>Comment l&#39;installer (Version MacOS)</u> ❓ <a class="header-anchor" href="#comment-l-installer-version-macos-❓" aria-label="Permalink to &quot;&lt;u&gt;Comment l&#39;installer (Version MacOS)&lt;/u&gt; ❓&quot;">​</a></h2><p>Pour la version MacOS, PHP et composer peuvent-être installés avec <a href="https://herd.laravel.com"><code>Laravel Herd</code></a>. Herd est un environnement de développement Laravel et PHP qui comprend nginx et dnsmasq en plus !</p><h2 id="comment-creer-projet-laravel-❓" tabindex="-1"><u>Comment créer projet Laravel </u> ❓ <a class="header-anchor" href="#comment-creer-projet-laravel-❓" aria-label="Permalink to &quot;&lt;u&gt;Comment créer projet Laravel &lt;/u&gt; ❓&quot;">​</a></h2><br><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-myfM5" id="tab-0EZhUtf" checked="checked"><label for="tab-0EZhUtf">Composer Windows</label><input type="radio" name="group-myfM5" id="tab-nGXlBJK"><label for="tab-nGXlBJK">Herd Laravel</label></div><div class="blocks"><div class="language-sh active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">composer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create-project</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">laravel/laravel</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ProjetLaravel</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">composer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">require</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">laravel/installer</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">laravel</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ProjetLaravel</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div><div class="danger custom-block"><p class="custom-block-title">Attention</p><p>⚠️ <u><strong>composer</strong></u> =&gt; Lorsque vous allez créer votre projet laravel avec <code>composer</code>, les fichiers seront dans le dossier <u><strong>/ProjetLaravel</strong></u> donc attention ou vous mettez vos fichiers !</p><p>⚠️ <u><strong>Herd Laravel</strong></u> =&gt; Si vous avez installé PHP et composer via l&#39;installer Herd Laravel sur MacOS, <strong>L&#39;installeur Laravel est déjà disponible !</strong></p></div><p>Une fois l&#39;application crée, Vous voulez sans doutes savoir comment démarrer le serveur de développement local ? tapez cette commande dans le terminal :</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ProjetLaravel</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">artisan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">serve</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="comprehension-de-la-logique-de-developpement" tabindex="-1">Compréhension de la logique de développement <a class="header-anchor" href="#comprehension-de-la-logique-de-developpement" aria-label="Permalink to &quot;Compréhension de la logique de développement&quot;">​</a></h2><p>Comme expliqué ci-dessus, nous utilisons la logique <a href="../MOVC">MVC</a> (Modèle, Vue, Controller)</p><h1 id="les-redirections" tabindex="-1"><u>Les redirections</u> <a class="header-anchor" href="#les-redirections" aria-label="Permalink to &quot;&lt;u&gt;Les redirections&lt;/u&gt;&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">routes</p><p>Lors de la création de votre projet Laravel, vous aurez un dossier <strong>routes</strong> avec trois fichiers php : API, WEB et CONSOLE. Généralement vous devrez initialiser vos routes dans le fichier <code>WEB</code>.</p></div><p>Voici un exemple de comment vous devez déclarer vos routes :</p><div class="language-php line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Illuminate</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Support</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Facades</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Route</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">Route</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/HelloWorld</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello World</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Que veux dire ce bout de code ? Lorsque vous allez déclarer une route du nom de <code>/greeting</code>. Comment procéder ?</p><p>Côté HTML :</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/HelloWorld</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">button ...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Dites bonjour</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Lorsque l&#39;utilisateur va cliquer sur le bouton, il sera redirigé vers une nouvelle page ou sera affiché <code>&quot;Hello World&quot;</code>.</p><div class="tip custom-block"><p class="custom-block-title">Bonnes pratiques</p><p><strong>Pour la lisibilité du code php, vous devez déclarer pour chaque features un nouveau fichier route. Par exemple on a une feature ou je dois afficher des produits. Nous devrons alors créer un fichier <code>ProduitsRoutes</code> (En CamelCase pour la convention) qui va lister toutes les routes de cette feature !</strong></p></div><h1 id="approfondissement" tabindex="-1"><u>Approfondissement</u> <a class="header-anchor" href="#approfondissement" aria-label="Permalink to &quot;&lt;u&gt;Approfondissement&lt;/u&gt;&quot;">​</a></h1><p>Une fois la base comprise nous allons creuser ! Nous avons vu qu&#39;en MVC la vue n&#39;intéragit pas avec les données (partie Modèle) (qui va intéragir avec nos données via L&#39;ORM) mais comment on fait alors pour afficher des données provenant d&#39;une base de donnée si la vue ne nous le permet pas ? Alors ? bien vue ! Nous allons utiliser les <strong><code>controllers</code></strong>.</p><p><em>Pour continuer sur notre exemple de produit nous allons créer un controller &quot;ProduitController&quot;:</em></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">artisan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">make:controller</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ProductsController</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>dedans nous allons créer une nouvelle fonction basique qui va retourner un hello world tout simple :</p><div class="language-php line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;?</span><span style="color:#A6ACCD;">php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">Http</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">Controllers</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Illuminate</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Http</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">App</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Http</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Controllers</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Controller</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">App</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Http</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Controllers</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">ProduitsController</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProduitsController</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Controller</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Hello</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">?&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Et alors la soyez attentif car dans notre routes nous n&#39;allons pas écrire comme ci-dessus mais plutôt comme celle-ci :</p><div class="language-php line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Illuminate</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Http</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Illuminate</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Support</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Facades</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Route</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">App</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Http</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Controllers</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">ProduitsController</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Route pour hello world</span></span>
<span class="line"><span style="color:#FFCB6B;">Route</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/HelloWorld</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">ProduitsController</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Comprenez vous la logique ? nous utilisons <strong>get</strong> pour obtenir un return de hello world et après la virgule nous allons dire : <em>je veux que tu m&#39;affiches mon hello world depuis la <u><strong>Classe ProduitsController</strong></u> et tu vas me selectionner la fonction <strong><code>Hello</code></strong> définit dans le controller.</em></p>`,38),r=[t];function p(c,i,u,d,C,m){return e(),a("div",null,r)}const F=s(o,[["render",p]]);export{D as __pageData,F as default};
