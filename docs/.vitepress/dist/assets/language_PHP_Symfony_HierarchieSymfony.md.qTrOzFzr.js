import{_ as s,c as i,o as n,a4 as a}from"./chunks/framework.Cp3ltd4t.js";const b=JSON.parse(`{"title":"Comprendre la hiérarchie d'une application Symfony","description":"","frontmatter":{"next":false,"prev":{"text":"Histoire de Symfony","link":"language/PHP/Symfony/HistoireSymfony"}},"headers":[],"relativePath":"language/PHP/Symfony/HierarchieSymfony.md","filePath":"language/PHP/Symfony/HierarchieSymfony.md","lastUpdated":1722174213000}`),e={name:"language/PHP/Symfony/HierarchieSymfony.md"},l=a(`<h1 id="comprendre-la-hierarchie-d-une-application-symfony" tabindex="-1">Comprendre la hiérarchie d&#39;une application Symfony <a class="header-anchor" href="#comprendre-la-hierarchie-d-une-application-symfony" aria-label="Permalink to &quot;Comprendre la hiérarchie d&#39;une application Symfony&quot;">​</a></h1><h2 id="application" tabindex="-1">Application <a class="header-anchor" href="#application" aria-label="Permalink to &quot;Application&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title"><em>L&#39;application Symfony est constituée de plusieurs parties distinctes :</em></p><blockquote><p>Kernel =&gt; C&#39;est le coeur de l&#39;application Symfony. Il gère les configurations, le cycle de vie des requêtes et des réponses.</p></blockquote><blockquote><p>Bundles =&gt; C&#39;est l&#39;équivalents des plugins ou modules. Un bundle est une <code>collection de fichiers qui ajoutent des fonctionnalités spécifiques à l&#39;application</code>.</p></blockquote></div><h2 id="bundles" tabindex="-1">Bundles <a class="header-anchor" href="#bundles" aria-label="Permalink to &quot;Bundles&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title"><em>Les bundles sont des blocs réutilisables de fonctionnalités. Il existe deux types de bundles</em></p><blockquote><p>Bundles tiers =&gt; Fournis par la communauté ou des développeurs externes. Ils sont installés via Composer.</p></blockquote><blockquote><p>Bundles personnalisés =&gt; Créés par les développeurs pour des fonctionnalités spécifiques à leur application.</p></blockquote></div><h2 id="structure-des-fichiers" tabindex="-1">Structure des fichiers <a class="header-anchor" href="#structure-des-fichiers" aria-label="Permalink to &quot;Structure des fichiers&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title"><em>La structure typique d&#39;un projet Symfony inclut les répertoires suivants :</em></p><details class="details custom-block"><summary>📁 <em>src/ : Contient le code source de l&#39;application, y compris les bundles personnalisés.</em></summary><blockquote><blockquote><blockquote><p>📂 <code>Controller/</code> : Contrôleurs qui gèrent les requêtes HTTP et renvoient les réponses appropriées.</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>📂 <code>Entity/</code> : Définitions des entités pour l&#39;ORM (Object-Relational Mapping).</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>📂 <code>Repository/</code> : Contient les classes de dépôt qui manipulent les entités.</p></blockquote></blockquote></blockquote></details></div><blockquote><p>📁 config/ : Fichiers de configuration pour l&#39;application et les bundles.</p></blockquote><blockquote><p>📁 templates/ : Fichiers de template Twig utilisés pour le rendu des vues.</p></blockquote><blockquote><p>📁 public/ : Point d&#39;entrée public de l&#39;application, souvent avec un fichier index.php.</p></blockquote><blockquote><p>📁 var/ : Fichiers générés par l&#39;application, comme les logs et le cache.</p></blockquote><blockquote><p>📁 vendor/ : Dépendances externes installées via Composer.</p></blockquote><h2 id="controllers" tabindex="-1">Controllers <a class="header-anchor" href="#controllers" aria-label="Permalink to &quot;Controllers&quot;">​</a></h2><p>Les contrôleurs sont responsables de traiter les requêtes HTTP et de renvoyer des réponses HTTP. <em><strong>Chaque méthode de contrôleur correspond généralement à une route spécifique.</strong></em></p><h2 id="routes" tabindex="-1">Routes <a class="header-anchor" href="#routes" aria-label="Permalink to &quot;Routes&quot;">​</a></h2><p>Les routes définissent comment les requêtes HTTP sont associées aux contrôleurs. Elles sont configurées dans des fichiers de configuration (YAML, XML) ou via des annotations dans les contrôleurs.</p><h2 id="modeles-et-entites" tabindex="-1">Modèles et Entités <a class="header-anchor" href="#modeles-et-entites" aria-label="Permalink to &quot;Modèles et Entités&quot;">​</a></h2><p>Les entités sont des objets qui représentent des données stockées dans une base de données. Elles sont définies dans le répertoire <code>Entity/</code>. Les dépôts (repositories) fournissent des méthodes pour interagir avec ces entités.</p><h2 id="services-et-injections-de-dependances" tabindex="-1">Services et Injections de Dépendances <a class="header-anchor" href="#services-et-injections-de-dependances" aria-label="Permalink to &quot;Services et Injections de Dépendances&quot;">​</a></h2><p>Symfony utilise un conteneur de services pour gérer les dépendances. Les services sont des objets réutilisables configurés via des fichiers de configuration. L&#39;injection de dépendances permet d&#39;injecter automatiquement ces services là où ils sont nécessaires.</p><details class="details custom-block"><summary>En savoir plus 👇</summary><div class="tip custom-block"><p class="custom-block-title"><h4><u>c&#39;est quoi un service ?</u></h4></p><p class="italic">Un service est comme un outil ou un assistant qui fait une tâche spécifique pour ton application. Par exemple, un service peut envoyer des emails, se connecter à une base de données, ou traiter des données.</p><h4><u>Qu&#39;est-ce que l&#39;injection de dépendances ?</u></h4><p class="italic">L&#39;injection de dépendances, c&#39;est une façon de donner à tes contrôleurs (ou à d&#39;autres services) les outils dont ils ont besoin sans qu&#39;ils aient à les chercher eux-mêmes. C&#39;est comme si quelqu&#39;un préparait tout le matériel dont tu as besoin pour faire un bricolage et te le donnait directement.</p><h4><u>Exemple concret:</u></h4> Imaginons que nous avons un service qui envoie des emails. Voici comment nous allons le créer et l&#39;utiliser dans un contrôleur. <ol><li><strong><u>Créer un Service</u></strong><br> On va créer un fichier de service qui s&#39;occupe d&#39;envoyer des emails. Ce fichier va être dans le dossier <code>src/Service</code>.</li></ol><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/Service/MailService.php</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App\\Service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MailService</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sendEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($to, $subject, $message)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Ici, on met le code pour envoyer un email</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Par exemple, on peut utiliser la fonction mail() de PHP</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        mail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($to, $subject, $message);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="2"><li><strong><u>Configurer le Service</u></strong><br> Nous devons dire à Symfony que ce service existe. Pour cela, nous allons ajouter une configuration dans un fichier YAML.</li></ol><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># config/services.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MailService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="3"><li><strong><u>Utiliser le Service dans un Contrôleur</u></strong><br> Maintenant, nous allons utiliser ce service dans un contrôleur. Un contrôleur est un fichier qui gère les requêtes de l&#39;utilisateur.</li></ol><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/Controller/RegistrationController.php</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App\\Controller</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Symfony\\Component\\HttpFoundation\\Response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App\\Service\\MailService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegistrationController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AbstractController</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $mailService;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Ici, on injecte le service dans le contrôleur</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __construct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MailService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $mailService)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mailService </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $mailService;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Response</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Code pour enregistrer un utilisateur</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Utiliser le service pour envoyer un email</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mailService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Welcome!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Thanks for registering!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;User registered and email sent!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div></div></details><h2 id="templates-et-twig" tabindex="-1">Templates et Twig <a class="header-anchor" href="#templates-et-twig" aria-label="Permalink to &quot;Templates et Twig&quot;">​</a></h2><p>Twig est le moteur de template par défaut de Symfony. Les fichiers Twig, situés dans le répertoire templates/, sont utilisés pour le rendu des vues.</p><h2 id="en-resume" tabindex="-1">En résumé <a class="header-anchor" href="#en-resume" aria-label="Permalink to &quot;En résumé&quot;">​</a></h2><div class="language-lua vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_project</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- config/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- packages/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- routes/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- services.yaml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- public/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- index.php</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- src/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Controller/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- DefaultController.php</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Entity/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- User.php</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Repository/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- UserRepository.php</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Kernel.php</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- templates/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- base.html.twig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- default/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|       |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- index.html.twig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- var/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- cache/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|   |</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- log/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- vendor/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- composer.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,25),p=[l];function t(r,h,o,c,k,d){return n(),i("div",null,p)}const E=s(e,[["render",t]]);export{b as __pageData,E as default};
