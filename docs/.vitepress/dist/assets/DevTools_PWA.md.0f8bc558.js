import{_ as e,o as s,c as n,V as a}from"./chunks/framework.11ad626b.js";const f=JSON.parse('{"title":"Introduction au PWA","description":"","frontmatter":{"next":false,"prev":false},"headers":[],"relativePath":"DevTools/PWA.md","filePath":"DevTools/PWA.md","lastUpdated":1707255551000}'),t={name:"DevTools/PWA.md"},o=a(`<h1 id="introduction-au-pwa" tabindex="-1">Introduction au PWA <a class="header-anchor" href="#introduction-au-pwa" aria-label="Permalink to &quot;Introduction au PWA&quot;">​</a></h1><h2 id="definition" tabindex="-1">Définition <a class="header-anchor" href="#definition" aria-label="Permalink to &quot;Définition&quot;">​</a></h2><blockquote><p>L&#39;histoire des Progressive Web Apps (PWA) remonte aux débuts des années 2010, lorsque les développeurs et les entreprises ont commencé à explorer de nouvelles façons de créer des expériences web plus riches et plus performantes, se rapprochant des applications natives. Ils ont ensuite été popularisé par Google vers 2015.</p></blockquote><h2 id="histoire" tabindex="-1">Histoire <a class="header-anchor" href="#histoire" aria-label="Permalink to &quot;Histoire&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title"><h1 class="PWA__center">C&#39;est quoi la PWA ?</h1></p><p><u><em><strong><h3 class="PWA__center">Origines dans les applications web mobiles :</h3></strong></em></u> <em>Avant l&#39;émergence des PWA, les développeurs web ont travaillé sur des techniques pour améliorer l&#39;expérience utilisateur des sites web sur les appareils mobiles. Cela inclut la conception réactive, qui permet aux sites web de s&#39;adapter à différentes tailles d&#39;écrans, ainsi que l&#39;utilisation de caches pour stocker des données localement.</em></p><p><u><em><strong><h3 class="PWA__center">Publication de l&#39;article de Alex Russell et Frances Berriman :</h3></strong></em></u> <em>En 2015, Alex Russell et Frances Berriman, des ingénieurs de Google, ont publié <a href="https://infrequently.org/2015/06/progressive-apps-escaping-tabs-without-losing-our-soul/">un article décrivant le concept des Progressive Web Apps</a>. Ils ont introduit l&#39;idée d&#39;utiliser les fonctionnalités modernes des navigateurs pour créer des applications web qui se comportent comme des applications natives.</em></p><p><u><em><strong><h3 class="PWA__center">Caractéristiques clés des PWA :</h3></strong></em></u> <em>Les PWA combinent plusieurs technologies existantes telles que les Service Workers, les Web App Manifests et les caches pour permettre aux applications web d&#39;être installées sur des appareils, d&#39;accéder aux fonctionnalités natives, et de fonctionner hors ligne.</em></p><p><u><em><strong><h3 class="PWA__center">Appui des principaux navigateurs et des géants de la technologie :</h3></strong></em></u> <em>Les navigateurs web majeurs, notamment Google Chrome, Mozilla Firefox, Microsoft Edge, et Apple Safari, ont commencé à implémenter des fonctionnalités permettant le support des PWA. De plus, des entreprises technologiques telles que Google et Microsoft ont fortement promu les PWA comme une alternative viable aux applications natives.</em></p><p><u><em><strong><h3 class="PWA__center">Adoption croissante :</h3></strong></em></u> <em>Les PWA ont commencé à gagner en popularité en raison de leur capacité à offrir une expérience utilisateur similaire à celle des applications natives tout en étant plus faciles à développer, déployer et mettre à jour. De nombreuses entreprises ont adopté les PWA pour leurs avantages en termes de coûts et de performances.</em></p><p><u><em><strong><h3 class="PWA__center">Évolution continue :</h3></strong></em></u> <em>Au fil du temps, les fonctionnalités des PWA ont continué à s&#39;améliorer, offrant des expériences utilisateur de plus en plus riches. Les développeurs ont également exploré de nouvelles façons d&#39;utiliser les PWA, telles que les applications de bureau et les expériences hors ligne avancées.</em></p></div><h2 id="une-minute-des-services-workers" tabindex="-1">Une minute.. des services workers ??? <a class="header-anchor" href="#une-minute-des-services-workers" aria-label="Permalink to &quot;Une minute.. des services workers ???&quot;">​</a></h2><p>Un mot extrèmement stylé mais bien utile puisqu&#39;ils offrent des fonctionnalités telles que <strong><code>la gestion de la mise en cache, la notification push et l&#39;interception des requêtes réseau</code></strong>.</p><div class="danger custom-block"><p class="custom-block-title">⚠️ Attention</p><p>Les fichiers <code>manifest.json</code> et <code>sw.js</code> doivent toujours être à la racine du fichier</p></div><details class="details custom-block"><summary>Code à mettre pour activer les services workers (dans head)</summary><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">serviceWorker</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> navigator) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">serviceWorker</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">register</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/sw.js’)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">reg</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sw registered</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">reg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sw not registered!”), err);}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>Le code suivant va enregistrer les services worker dans le fichier sw.js auquel nous pouvons affecter des évènements spécifique à l&#39;écoute des actions sur la page. <em><strong>Vous pouvez laissez vide le fichier sw.js si vous voulez uniquement rendre votre site téléchargeable. On s&#39;en servira par exemple pour la mise en cache si on veut qu&#39;hors ligne notre site conserve les liens et le contenu</strong></em></p></blockquote></details><h2 id="une-minute-le-manifest-json" tabindex="-1">Une minute.. le manifest.json ??? <a class="header-anchor" href="#une-minute-le-manifest-json" aria-label="Permalink to &quot;Une minute.. le manifest.json ???&quot;">​</a></h2><p><em>Encore un mot inconnu et qui n&#39;a pas grand sens dis comme ça mais qui est l&#39;élément central d&#39;une PWA. La présence d&#39;un manifeste procure également d&#39;autres avantages. En voici quelques uns:</em></p><ol><li>Il permet à certains navigateurs d&#39;ajouter au bureau ou à l&#39;écran d&#39;accueil un raccourci vers la PWA</li><li>Il permet à la PWA d&#39;être référencée sur certains apps stores tels que le Windows Store (opens new window).</li><li>Il permet d&#39;afficher la PWA en plein écran, sans UI navigateur, avec un écran de lancement initial (splashscreen) lors de l&#39;ouverture de la PWA</li></ol><details class="details custom-block"><summary>Propriétés du manifest</summary><ul><li><strong><u><code>name:</code></u></strong>  affiché sur le splash-screen</li><li><strong><u><code>short_name:</code></u></strong>  affiché en dessous du raccourci sur le bureau ou l&#39;écran d&#39;accueil</li><li><strong><u><code>description:</code></u></strong>  une description générale de l&#39;application</li><li><strong><u><code>start_url:</code></u></strong> l&#39;URL qui est chargée en premier quand on ouvre l&#39;application depuis son raccourci sur le bureau ou l&#39;écran d&#39;accueil</li><li><strong><u><code>background_color:</code></u></strong>   La couleur d&#39;arrière-plan du splash-screen</li><li><strong><u><code>theme_color:</code></u></strong>  la couleur de thème général de l&#39;application, utilisée notamment dans les barres de statut si elles sont affichées</li><li><strong><u><code>display:</code></u></strong>   spécifie le mode d&#39;affichage. Voici les différents modes disponibles triés par ordre de fallback :</li><li><strong><u><code>fullscreen:</code></u></strong> toute la zone d&#39;affichage disponible est utilisée et aucun agent utilisateur n&#39;est montré.</li><li><strong><u><code>standalone:</code></u></strong> comportement similaire a une application native. Cela peut signifier que l&#39;application a sa propre fenêtre, sa propre icône dans le lanceur d&#39;applications, etc. Dans ce mode, l&#39;agent utilisateur va exclure les éléments d&#39;interface qui permettent de contrôler la navigation mais peut inclure d&#39;autres éléments comme une barre de statut par exemple.</li><li><strong><u><code>minimal-ui:</code></u></strong> l&#39;application va ressembler et se comporter comme une application autonome, mais elle aura quelques élements d&#39;interface permettant de contrôler la navigation. Les éléments varient en fonction du navigateur et du système.</li><li><strong><u><code>browser (par défaut):</code></u></strong> l&#39;application s&#39;ouvre dans un nouvel onglet ou une nouvelle fenêtre du navigateur, en fonction du navigateur et de la plateforme</li><li><strong><u><code>icons:</code></u></strong>  liste d&#39;icônes de l&#39;application de différentes résolutions, utilisées notamment pour le raccourci et le splashscreen. Les tailles à fournir recommandées sont a minima 192x192px et 512x512px. L&#39;appareil choisira la meilleure icône automatiquement selon les cas. Il est également intéressant de fournir en fallback une version vectorielle SVG de l&#39;icône qui s&#39;adaptera à un maximum de tailles.</li><li><strong><u><code>screenshots:</code></u></strong> liste de captures d&#39;écran de l&#39;application dans différents facteurs de forme, affichées dans certains stores d&#39;applications web ou dans l&#39;interface de la fenêtre d&#39;installation pour certains navigateurs.</li></ul></details>`,13),l=[o];function r(i,c,p,u,d,m){return s(),n("div",null,l)}const h=e(t,[["render",r]]);export{f as __pageData,h as default};
